//В качестве штрихкода карты используется серийный номер ОСМИ

//Входные параметры:
//	1. Имя регистрационной группы
//	2. Виды карт лояльности
//	3. Бонусная программа лояльности
//	4. Шаблон электронной карты
//  5. Шаблон штрихкода карты (к примеру 990000000000000)

ИмяРегистрационнойГруппы = Отборы.Получить(0).Значение.Наименование;
ВидКарты = Отборы.Получить(1).Значение;
ШаблонОСМИ = Отборы.Получить(2).Значение;
БонуснаяПрограммаЛояльности = Отборы.Получить(3).Значение;
ШаблонШтрихкода = Отборы.Получить(4).Значение;

МассивКарт = ОСМИ_РаботаСAPI.ПолучитьСписокЗарегистрированныхКарт(ИмяРегистрационнойГруппы).Ответ.registrations;
Если МассивКарт.Количество() > 0 Тогда

	МассивНаУдаление = Новый Массив;

	Для Каждого Карта из МассивКарт Цикл
	 
		Попытка
	 
			Телефон = ?(Карта.Телефон = "-empty-", "", Карта.Телефон);
			ТелефонЦифры = СтрЗаменить(
								СтрЗаменить(
									СтрЗаменить(
										СтрЗаменить(Телефон, " ", ""), 
									")", ""), 
								"(", ""),
							"-", "");
										
	        Если Телефон = "" Тогда
	            ВызватьИсключение "В новой дисконтной карте не задан номер телефона!";
	        КонецЕсли;
			
			Почта = СокрЛП(СтрЗаменить(Карта.Почта, "-empty-", ""));
			КодКарты = СокрЛП(Карта.serialNo);
			Штрихкод = Лев(ШаблонШтрихкода, СтрДлина(ШаблонШтрихкода) - СтрДлина(КодКарты)) + КодКарты;
			ФИО = СокрЛП(Карта.Фамилия) + " " + СокрЛП(Карта.Имя) + ?(ЗначениеЗаполнено(Карта.Отчество) И Карта.Отчество <> "-empty-", " " + СокрЛП(Карта.Отчество), "");
			
			НовыйПартнер = Ложь;
	 
			НачатьТранзакцию();
	 
			//Поиск партнера
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	ПартнерыКонтактнаяИнформация.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
			               |ГДЕ
			               |	ПартнерыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			               |	И (ПартнерыКонтактнаяИнформация.Представление = &Телефон
			               |			ИЛИ ПартнерыКонтактнаяИнформация.НомерТелефона = &НомерТелефона7
			               |			ИЛИ ПартнерыКонтактнаяИнформация.НомерТелефона = &НомерТелефона8)
			               |	И ПартнерыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПартнера)
			               |	И НЕ ПартнерыКонтактнаяИнформация.Ссылка.ПометкаУдаления";
	 
			Запрос.УстановитьПараметр("Телефон", Телефон);
			Запрос.УстановитьПараметр("НомерТелефона7", "7" + Прав(ТелефонЦифры, 10));
			Запрос.УстановитьПараметр("НомерТелефона8", "8" + Прав(ТелефонЦифры, 10));
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				//Нашли, берем только одного
				Партнер = Выборка.Ссылка.ПолучитьОбъект();
				
				//Обновляем значения реквизитов
				Партнер.Клиент = Истина;
				Партнер.Наименование = ФИО;
				Партнер.НаименованиеПолное = ФИО;
				Попытка
					ДР = СтрРазделить(Карта.Дата_Рождения, ".");
					Партнер.ДатаРождения = Дата(ДР[2],ДР[1],ДР[0]);
				Исключение
				КонецПопытки;
				
			Иначе
				
				//Создаем новый
				НовыйПартнер = Истина;
				
				Партнер = Справочники.Партнеры.СоздатьЭлемент();
				Партнер.Родитель = Справочники.Партнеры.РозничныйПокупатель;
				Партнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо;
				Партнер.ДатаРегистрации = ТекущаяДатаСеанса();
				Партнер.Клиент = Истина;
				Партнер.Наименование = ФИО;
				Партнер.НаименованиеПолное = ФИО;
				Попытка
					ДР = СтрРазделить(Карта.Дата_Рождения, ".");
					Партнер.ДатаРождения = Дата(ДР[2],ДР[1],ДР[0]);
				Исключение
				КонецПопытки;
	 
	            УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Партнер, Телефон,
	                Справочники.ВидыКонтактнойИнформации.ТелефонПартнера, ТекущаяДатаСеанса());
					
			КонецЕсли;
	 
			//Почта
	   		Если Карта.Почта <> "" Тогда
	           УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(Партнер, Карта.Почта,
	                Справочники.ВидыКонтактнойИнформации.EmailПартнера, ТекущаяДатаСеанса(), Истина);
			КонецЕсли;
	 
			Партнер.Записать();
			
			Если НовыйПартнер Тогда
				
				ИерархияПартнеров = РегистрыСведений.ИерархияПартнеров.СоздатьМенеджерЗаписи();
				ИерархияПартнеров.Активность = Истина;
				ИерархияПартнеров.Партнер = Партнер.Ссылка;
				ИерархияПартнеров.Родитель = Справочники.Партнеры.РозничныйПокупатель;
				ИерархияПартнеров.Записать(Истина);
				
				ИерархияПартнеров = РегистрыСведений.ИерархияПартнеров.СоздатьМенеджерЗаписи();
				ИерархияПартнеров.Активность = Истина;
				ИерархияПартнеров.Партнер = Партнер.Ссылка;
				ИерархияПартнеров.Родитель = Партнер.Ссылка;
				ИерархияПартнеров.Уровень = 1;
				ИерархияПартнеров.Записать(Истина);
					
			КонецЕсли;
			
			//Карта лояльности - если у Партнера уже есть Карта лояльности с требуемой бонусной программой,
			//то используем ее, иначе создаем новую
			
			Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КартыЛояльности.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.КартыЛояльности КАК КартыЛояльности
	                      |ГДЕ
	                      |	КартыЛояльности.Владелец = &ВидКарты
	                      |	И КартыЛояльности.Партнер = &Партнер
	                      |	И НЕ КартыЛояльности.ПометкаУдаления");
	 
			Запрос.УстановитьПараметр("ВидКарты", ВидКарты);
			Запрос.УстановитьПараметр("Партнер", Партнер.Ссылка);
	 
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
			    ИнфКартаСсылка = Выборка.Ссылка;
			Иначе
				
				//Создаем новую
				ИнфКарта = Справочники.КартыЛояльности.СоздатьЭлемент();
				ИнфКарта.Штрихкод = Штрихкод;
				ИнфКарта.Статус = Перечисления.СтатусыКартЛояльности.Действует;
				ИнфКарта.Наименование = Телефон + " (" + ФИО + ")";
				ИнфКарта.Владелец = ВидКарты;
				ИнфКарта.Партнер = Партнер.Ссылка;
				ИнфКарта.ОбменДанными.Загрузка = Истина;
				ИнфКарта.Записать();
				ИнфКартаСсылка = ИнфКарта.Ссылка;
	 
			КонецЕсли;
	 
			//Электронная карта
			КартаОСМИСсылка = Справочники.ОСМИ_ЭлектронныеКарты.НайтиПоКоду(Штрихкод);
			Если КартаОСМИСсылка.Пустая() Тогда
				КартаОСМИ = Справочники.ОСМИ_ЭлектронныеКарты.СоздатьЭлемент();
				КартаОСМИ.Код = КодКарты;
				КартаОСМИ.Наименование = Штрихкод + " [" + Телефон + "]" + " (" + ФИО + ")";
				КартаОСМИ.Шаблон = ШаблонОСМИ;
				КартаОСМИ.ОбменДанными.Загрузка = Истина;
				КартаОСМИ.Записать();
				КартаОСМИСсылка = КартаОСМИ.Ссылка;
			Иначе
				КартаОСМИ = КартаОСМИСсылка.ПолучитьОбъект();
			КонецЕсли;
			
			Рег = РегистрыСведений.ОСМИ_СоответствиеКарт.СоздатьМенеджерЗаписи();
			Рег.ОбъектБазы = ИнфКартаСсылка;
			Рег.ЭлектроннаяКарта = КартаЭл;
			Рег.ДатаРегистрации = ТекущаяДатаСеанса();
			Рег.Записать();
						
			//Заполним поля
			Если КартаОСМИ.УстановитьЗначенияПолей(,, ИнфКартаСсылка) Тогда
				КартаОСМИ.Записать(); //Еще раз запишем, т.к. поля карты изменились
			Иначе
				ВызватьИсключение "Ошибка установки значений полей карты: " + КартаОСМИСсылка;
			КонецЕсли;
			
			МассивНаУдаление.Добавить(Карта.serialNo);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
			
		КонецПопытки;
		
	КонецЦикла;
	 
	Если МассивНаУдаление.Количество() > 0 Тогда
		ОСМИ_РаботаСAPI.ОтправитьПушСообщение(, МассивНаУдаление,,, "Ваша карта активирована");
		ОСМИ_РаботаСAPI.УдалитьРегиcтрацию(МассивНаУдаление);
	КонецЕсли;

КонецЕсли;